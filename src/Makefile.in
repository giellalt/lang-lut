# Makefile.in generated by automake 1.14.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# *.gt.* designates the tagset being used.
# At the end of the makefile, there is support for automatic compilation of
# other tagsets, given that the proper tagset relabeling files are defined,
# and that the target files are defined as part of the 'all' target.
#
# Filenames are built as follows:
# basictype-application-tagset-normativity[-dialect].fsttype
#
# 'application' is not specified for the regular/default morphological
# analysis/generation.
#
# Examples:
# analyser-oahpa-gt-desc.hfst
# generator-apertium-apertium-norm_single.hfst
# analyser-gt-desc.xfst
#
# Full details regarding transducer filenames can be found at:
#
# http://divvun.no/doc/infra/infraremake/TransducerNamesInTheNewInfra.html

####### Automake targets: ########

# First attempt at building mt/apertium fst's.
# We only do hfst here, since that's what we actually use. Xerox can be added
# later if needed

# This file is included by topdir-include.am, which is included by
# $GTLANG/src/Makefile.am. All file references are relative to that Makefile.am.

VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@CAN_XFST_TRUE@@WANT_DICTIONARIES_TRUE@am__append_1 = analyser-dict-gt-desc.xfst \
@CAN_XFST_TRUE@@WANT_DICTIONARIES_TRUE@					analyser-dict-gt-norm.xfst

@CAN_XFST_TRUE@@WANT_DICTIONARIES_TRUE@am__append_2 = generator-dict-gt-norm.xfst \
@CAN_XFST_TRUE@@WANT_DICTIONARIES_TRUE@					generator-dict-gt-desc.xfst

@CAN_HFST_TRUE@@WANT_OAHPA_TRUE@am__append_3 = generator-oahpa-gt-norm.hfst
@CAN_XFST_TRUE@@WANT_OAHPA_TRUE@am__append_4 = generator-oahpa-gt-norm.xfst
DIST_COMMON = $(top_srcdir)/am-shared/src-dir-include.am \
	$(top_srcdir)/am-shared/src_mt-include.am \
	$(top_srcdir)/am-shared/src_oahpa-include.am \
	$(top_srcdir)/am-shared/src_dictionary-include.am \
	$(top_srcdir)/am-shared/src_disamb-include.am \
	$(srcdir)/Makefile.in $(srcdir)/Makefile.am
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_compare_version.m4 \
	$(top_srcdir)/m4/ax_python_module.m4 \
	$(top_srcdir)/m4/giellatekno.m4 $(top_srcdir)/m4/hfst.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
SOURCES =
DIST_SOURCES =
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(hfstdatadir)"
DATA = $(hfstdata_DATA) $(noinst_DATA)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	distdir
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CYGPATH_W = @CYGPATH_W@
CYGWINJAVAPATH = @CYGWINJAVAPATH@
DEFS = @DEFS@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
FORREST = @FORREST@
GTCORE = @GTCORE@
GTCORESH = @GTCORESH@
GTD_VERSION = @GTD_VERSION@
GTLANG = @GTLANG@
GTLANG2 = @GTLANG2@
GTMAINTAINER = @GTMAINTAINER@
GZIP = @GZIP@
HFST_COMPOSE = @HFST_COMPOSE@
HFST_COMPOSE_INTERSECT = @HFST_COMPOSE_INTERSECT@
HFST_CONCATENATE = @HFST_CONCATENATE@
HFST_CONJUNCT = @HFST_CONJUNCT@
HFST_DETERMINIZE = @HFST_DETERMINIZE@
HFST_DISJUNCT = @HFST_DISJUNCT@
HFST_FOMA = @HFST_FOMA@
HFST_FST2FST = @HFST_FST2FST@
HFST_FST2STRINGS = @HFST_FST2STRINGS@
HFST_FST2TXT = @HFST_FST2TXT@
HFST_INFO = @HFST_INFO@
HFST_INVERT = @HFST_INVERT@
HFST_LEXC = @HFST_LEXC@
HFST_LEXC2FST = @HFST_LEXC2FST@
HFST_LOOKUP = @HFST_LOOKUP@
HFST_MINIMIZE = @HFST_MINIMIZE@
HFST_MINIMIZE_SPELLER = @HFST_MINIMIZE_SPELLER@
HFST_MINUS = @HFST_MINUS@
HFST_MULTIPLY = @HFST_MULTIPLY@
HFST_NAME = @HFST_NAME@
HFST_PAIR_TEST = @HFST_PAIR_TEST@
HFST_PROC = @HFST_PROC@
HFST_PROJECT = @HFST_PROJECT@
HFST_PRUNE_ALPHABET = @HFST_PRUNE_ALPHABET@
HFST_PUSH_WEIGHTS = @HFST_PUSH_WEIGHTS@
HFST_REGEXP2FST = @HFST_REGEXP2FST@
HFST_REMOVE_EPSILONS = @HFST_REMOVE_EPSILONS@
HFST_REPEAT = @HFST_REPEAT@
HFST_REVERSE = @HFST_REVERSE@
HFST_REWEIGHT = @HFST_REWEIGHT@
HFST_SPLIT = @HFST_SPLIT@
HFST_STRINGS2FST = @HFST_STRINGS2FST@
HFST_SUBSTITUTE = @HFST_SUBSTITUTE@
HFST_SUBTRACT = @HFST_SUBTRACT@
HFST_SUMMARIZE = @HFST_SUMMARIZE@
HFST_TWOLC = @HFST_TWOLC@
HFST_TXT2FST = @HFST_TXT2FST@
HFST_XFST = @HFST_XFST@
HFST_XFST2FST = @HFST_XFST2FST@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
JV = @JV@
LEXC = @LEXC@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LOOKUP = @LOOKUP@
LO_min_version = @LO_min_version@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PRINTF = @PRINTF@
PYTHON = @PYTHON@
PYTHON_EXEC_PREFIX = @PYTHON_EXEC_PREFIX@
PYTHON_PLATFORM = @PYTHON_PLATFORM@
PYTHON_PREFIX = @PYTHON_PREFIX@
PYTHON_VERSION = @PYTHON_VERSION@
RSYNC = @RSYNC@
SAXON = @SAXON@
SAXONJAR = @SAXONJAR@
SEE = @SEE@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TWOLC = @TWOLC@
VERSION = @VERSION@
VISLCG3 = @VISLCG3@
VISLCG3_COMP = @VISLCG3_COMP@
WGET = @WGET@
XFST = @XFST@
ZIP = @ZIP@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
am__leading_dot = @am__leading_dot@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pkgpyexecdir = @pkgpyexecdir@
pkgpythondir = @pkgpythondir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
pyexecdir = @pyexecdir@
pythondir = @pythondir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

# always build . last here, and tagsets have to be built after morphology
SUBDIRS = phonology morphology filters phonetics hyphenation orthography syntax transcriptions tagsets .

####### Automake targets: ########

#### Local modifications in *fst processing: ####
####
#### Copy the fallback targets, and rename them to the desired targets. Then:
#### Replace the 'cp' command (Xerox) / Prepend the hfst-invert command (Hfst -
#### remember to move the $<) with whatever you need to complete
#### the processing to get the final target transducer.
#### Remember to add the dependencies as well.
#### Also make sure that HFST and Xerox processing are the same.
####
#### If you add new transducers to be built, you need to add them to the
#### relevant variable, e.g.:
####
#### if CAN_HFST
#### GT_GENERATORS_HFST+=generator-oahpa-gt-norm.hfst
#### endif
####
#### NB!!!! The HFST targets should get a hyphen after 'analyser'/'generator'
#### respectively, to make the local targets minimally different from and
#### slightly more specific than the fallback targets. This is to avoid warnings
#### about duplicate targets. That is, the local targets should looke like:
####
#### analyser-%.hfst: analyser-%.tmp.hfst
#### generator-%.hfst: generator-%.tmp.hfst

##################################################################
#### BEGIN: Add local processing instructions BELOW this line ####
##################################################################

########################################################
#### Add language-specific transducer targets here: ####

#### Xerox transducers:

#### HFST transducers
@CAN_HFST_TRUE@GT_ANALYSERS_HFST = analyser-gt-desc.hfst \
@CAN_HFST_TRUE@	analyser-gt-norm.hfst
@CAN_HFST_TRUE@GT_GENERATORS_HFST = generator-gt-desc.hfst \
@CAN_HFST_TRUE@	generator-gt-norm.hfst $(am__append_3)
@CAN_HFST_TRUE@GT_TRANSFORMERS_HFST = transcriptor-clock2text-desc.hfst \
@CAN_HFST_TRUE@					 transcriptor-date2text-desc.hfst \
@CAN_HFST_TRUE@					 transcriptor-numbers2text-desc.hfst \
@CAN_HFST_TRUE@					 transcriptor-text2clock-desc.hfst \
@CAN_HFST_TRUE@					 transcriptor-text2date-desc.hfst \
@CAN_HFST_TRUE@					 transcriptor-text2numbers-desc.hfst


# This is just a generic analyser. You need to add pair-specific analysers to
# the language-specific part further down.
@CAN_HFST_TRUE@@WANT_APERTIUM_TRUE@APERTIUM_ANALYSERS_HFST =  \
@CAN_HFST_TRUE@@WANT_APERTIUM_TRUE@	analyser-mt-gt-desc.hfst \
@CAN_HFST_TRUE@@WANT_APERTIUM_TRUE@	analyser-mt-apertium-desc.und.hfst \
@CAN_HFST_TRUE@@WANT_APERTIUM_TRUE@	analyser-mt-apertium-desc.und.att.gz
@CAN_HFST_TRUE@@WANT_APERTIUM_TRUE@APERTIUM_GENERATORS_HFST =  \
@CAN_HFST_TRUE@@WANT_APERTIUM_TRUE@	generator-mt-gt-norm.hfst \
@CAN_HFST_TRUE@@WANT_APERTIUM_TRUE@	generator-mt-apertium-norm.hfst \
@CAN_HFST_TRUE@@WANT_APERTIUM_TRUE@	generator-mt-apertium-norm.att.gz
@CAN_XFST_TRUE@GT_ANALYSERS_XFST = analyser-gt-desc.xfst \
@CAN_XFST_TRUE@	analyser-gt-norm.xfst $(am__append_1)
@CAN_XFST_TRUE@GT_GENERATORS_XFST = generator-gt-desc.xfst \
@CAN_XFST_TRUE@	generator-gt-norm.xfst $(am__append_2) \
@CAN_XFST_TRUE@	$(am__append_4)
@CAN_XFST_TRUE@GT_TRANSFORMERS_XFST = transcriptor-clock2text-desc.xfst \
@CAN_XFST_TRUE@					 transcriptor-date2text-desc.xfst \
@CAN_XFST_TRUE@					 transcriptor-numbers2text-desc.xfst \
@CAN_XFST_TRUE@					 transcriptor-text2clock-desc.xfst \
@CAN_XFST_TRUE@					 transcriptor-text2date-desc.xfst \
@CAN_XFST_TRUE@					 transcriptor-text2numbers-desc.xfst

@CAN_HFST_TRUE@hfstdatadir = $(datadir)/hfst/$(GTLANG)
@CAN_HFST_TRUE@hfstdata_DATA = $(GT_ANALYSERS_HFST) \
@CAN_HFST_TRUE@			  $(GT_GENERATORS_HFST) \
@CAN_HFST_TRUE@			  $(GT_TRANSFORMERS_HFST) \
@CAN_HFST_TRUE@			  $(APERTIUM_ANALYSERS_HFST) \
@CAN_HFST_TRUE@			  $(APERTIUM_GENERATORS_HFST)

noinst_DATA = $(GT_ANALYSERS_XFST) \
			$(GT_GENERATORS_XFST) \
			$(GT_TRANSFORMERS_XFST)

all: all-recursive

.SUFFIXES:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/am-shared/src-dir-include.am $(top_srcdir)/am-shared/src_mt-include.am $(top_srcdir)/am-shared/src_oahpa-include.am $(top_srcdir)/am-shared/src_dictionary-include.am $(top_srcdir)/am-shared/src_disamb-include.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/am-shared/src-dir-include.am $(top_srcdir)/am-shared/src_mt-include.am $(top_srcdir)/am-shared/src_oahpa-include.am $(top_srcdir)/am-shared/src_dictionary-include.am $(top_srcdir)/am-shared/src_disamb-include.am:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-hfstdataDATA: $(hfstdata_DATA)
	@$(NORMAL_INSTALL)
	@list='$(hfstdata_DATA)'; test -n "$(hfstdatadir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(hfstdatadir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(hfstdatadir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(hfstdatadir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(hfstdatadir)" || exit $$?; \
	done

uninstall-hfstdataDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(hfstdata_DATA)'; test -n "$(hfstdatadir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(hfstdatadir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(DATA)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(hfstdatadir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-local mostlyclean-am

distclean: distclean-recursive
	-rm -f Makefile
distclean-am: clean-am distclean-generic distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-hfstdataDATA

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-hfstdataDATA

.MAKE: $(am__recursive_targets) install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-am clean clean-generic clean-local cscopelist-am ctags \
	ctags-am distclean distclean-generic distclean-tags distdir \
	dvi dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-hfstdataDATA install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-generic pdf pdf-am ps ps-am tags \
	tags-am uninstall uninstall-am uninstall-hfstdataDATA


#################################################
#### Add language-specific build rules here: ####

# Apertium-related language-specific targets - modify to suit each language:
analyser-mt-%.und.hfst: analyser-mt-%.tmp.hfst
	$(AM_V_GEN)$(HFST_INVERT) $< \
		| $(HFST_FST2FST) $(HFST_FLAGS) -t -o $@

##################################################################
#### END: Add local processing instructions ABOVE this line ######
##################################################################

#### HFST transducer fallback target:
#### - inversion is needed FOR THE ANALYSER because the hfst model is upside
#### down compared to Xerox AT APPLICATION TIME. The other command makes the
#### final transducer ready for use.
analyser%.hfst: analyser%.tmp.hfst
	$(AM_V_GEN)$(HFST_INVERT) $< \
		| $(HFST_FST2FST) $(HFST_FLAGS) -f olw -o $@

generator%.hfst: generator%.tmp.hfst
	$(AM_V_GEN)$(HFST_FST2FST) $(HFST_FLAGS) -t -i $< -o $@

#### Xerox transducer fallback target:
%.xfst: %.tmp.xfst
	$(AM_V_GEN)cp -f $< $@

##################################################
######## Build rules for Xerox and HFST: #########
#
#       Each target transducer is defined together
#       for both transducer types,
#       first for HFST then for Xerox. This
#       makes it easy to check that the build
#       is parallell for the two transducer
#       types.
##################################################

# The "raw" transducer contains all tags and symbols available on the analysis
# side. Some of them are optional for generation, some are only needed for
# special tools. On the lower side, the raw transducer contains all
# morphological boundaries and hyphenation symbols. As such, this transducer
# can NOT be used for morphological analysis, and hardly for generation.
#
# To get a transducer usable for a certain application, the raw transducer needs
# to be filtered and manipulated to get the target tag set and surface symbols.
# That is done in all subsequent targets, which builds on this one.
generator-raw-gt-desc.hfst: morphology/$(GTLANG).lexc.hfst \
					 phonology/$(GTLANG)-phon.hfst
	$(AM_V_GEN)$(HFST_COMPOSE_INTERSECT) $(HFST_FLAGS) \
		-1 morphology/$(GTLANG).lexc.hfst \
		-2 phonology/$(GTLANG)-phon.hfst |\
		$(HFST_MINIMIZE) $(HFST_FLAGS) -o $@

analyser-raw-gt-desc.xfst: morphology/$(GTLANG).lexc.xfst \
			 phonology/$(GTLANG)-phon.xfst
	$(AM_V_GEN)$(PRINTF) \
		"read-source morphology/$(GTLANG).lexc.xfst\nread-rules  phonology/$(GTLANG)-phon.xfst\ncompose-result\nsave-result $@\nquit\n" \
		> $@.script
	$(AM_V_GEN)$(LEXC) < $@.script
	$(AM_V_GEN)rm -f $@.script

# This is the default, descriptive analyser:
analyser-gt-desc.tmp.hfst: generator-raw-gt-desc.hfst            \
					filters/remove-derivation-position-tags.hfst \
					filters/remove-dialect-tags.hfst             \
					filters/remove-homonymy-tags.hfst            \
					filters/remove-variant-tags.hfst             \
					filters/remove-norm-comp-tags.hfst           \
					filters/remove-number-string-tags.hfst       \
					filters/remove-usage-tags.hfst               \
					filters/remove-hyphenation-marks.hfst        \
					filters/remove-infl_deriv-borders.hfst       \
					filters/remove-word-boundary.hfst            \
					filters/remove-orthography-tags.hfst         \
					filters/remove-Orth_IPA-strings.hfst         \
					filters/remove-orig_lang-tags.hfst           \
					orthography/inituppercase.hfst               \
					orthography/spellrelax.hfst
	$(AM_V_GEN)$(PRINTF) "\
				@\"filters/remove-derivation-position-tags.hfst\" \
			.o. @\"filters/remove-dialect-tags.hfst\"             \
			.o. @\"filters/remove-homonymy-tags.hfst\"            \
			.o. @\"filters/remove-variant-tags.hfst\"             \
			.o. @\"filters/remove-norm-comp-tags.hfst\"           \
			.o. @\"filters/remove-number-string-tags.hfst\"       \
			.o. @\"filters/remove-usage-tags.hfst\"               \
			.o. @\"filters/remove-orig_lang-tags.hfst\"           \
			.o. @\"filters/remove-orthography-tags.hfst\"         \
			.o. @\"filters/remove-Orth_IPA-strings.hfst\"         \
			.o. @\"$<\" \
			.o. @\"filters/remove-hyphenation-marks.hfst\"        \
			.o. @\"filters/remove-infl_deriv-borders.hfst\"       \
			.o. @\"filters/remove-word-boundary.hfst\"            \
			.o. @\"orthography/inituppercase.hfst\"               \
			.o. @\"orthography/spellrelax.hfst\"                  \
			;" \
		| $(HFST_REGEXP2FST) $(HFST_FLAGS) -S --harmonize-flags \
		> $@

analyser-gt-desc.tmp.xfst: analyser-raw-gt-desc.xfst             \
					filters/remove-derivation-position-tags.xfst \
					filters/remove-dialect-tags.xfst             \
					filters/remove-homonymy-tags.xfst            \
					filters/remove-variant-tags.xfst             \
					filters/remove-norm-comp-tags.xfst           \
					filters/remove-number-string-tags.xfst       \
					filters/remove-usage-tags.xfst               \
					filters/remove-hyphenation-marks.xfst        \
					filters/remove-infl_deriv-borders.xfst       \
					filters/remove-word-boundary.xfst            \
					filters/remove-orthography-tags.xfst         \
					filters/remove-Orth_IPA-strings.xfst         \
					filters/remove-orig_lang-tags.xfst           \
					orthography/inituppercase.xfst               \
					orthography/spellrelax.xfst
	$(AM_V_GEN)$(PRINTF) "read regex \
				@\"filters/remove-derivation-position-tags.xfst\" \
			.o. @\"filters/remove-dialect-tags.xfst\"             \
			.o. @\"filters/remove-homonymy-tags.xfst\"            \
			.o. @\"filters/remove-variant-tags.xfst\"             \
			.o. @\"filters/remove-norm-comp-tags.xfst\"           \
			.o. @\"filters/remove-number-string-tags.xfst\"       \
			.o. @\"filters/remove-usage-tags.xfst\"               \
			.o. @\"filters/remove-orig_lang-tags.xfst\"           \
			.o. @\"filters/remove-orthography-tags.xfst\"         \
			.o. @\"filters/remove-Orth_IPA-strings.xfst\"         \
			.o. @\"$<\" \
			.o. @\"filters/remove-hyphenation-marks.xfst\"        \
			.o. @\"filters/remove-infl_deriv-borders.xfst\"       \
			.o. @\"filters/remove-word-boundary.xfst\"            \
			.o. @\"orthography/inituppercase.xfst\"               \
			.o. @\"orthography/spellrelax.xfst\"                  \
			;\n\
		 save stack $@\n\
		 quit\n" | $(XFST) -q

# This is the default, descriptive generating transducer.
generator-gt-desc.tmp.hfst: generator-raw-gt-desc.hfst           \
					filters/make-optional-transitivity-tags.hfst \
					filters/make-optional-homonymy-tags.hfst     \
					filters/make-optional-variant-tags.hfst      \
					filters/remove-derivation-position-tags.hfst \
					filters/remove-dialect-tags.hfst             \
					filters/remove-hyphenation-marks.hfst        \
					filters/remove-infl_deriv-borders.hfst       \
					filters/remove-word-boundary.hfst            \
					filters/remove-norm-comp-tags.hfst           \
					filters/remove-number-string-tags.hfst       \
					filters/remove-orthography-tags.hfst         \
					filters/remove-Orth_IPA-strings.hfst         \
					filters/remove-orig_lang-tags.hfst           \
					filters/remove-usage-tags.hfst
	$(AM_V_GEN)$(PRINTF) "\
				@\"filters/make-optional-transitivity-tags.hfst\" \
			.o. @\"filters/make-optional-homonymy-tags.hfst\"     \
			.o. @\"filters/make-optional-variant-tags.hfst\"      \
			.o. @\"filters/remove-derivation-position-tags.hfst\" \
			.o. @\"filters/remove-dialect-tags.hfst\"             \
			.o. @\"filters/remove-norm-comp-tags.hfst\"           \
			.o. @\"filters/remove-number-string-tags.hfst\"       \
			.o. @\"filters/remove-usage-tags.hfst\"               \
			.o. @\"filters/remove-orig_lang-tags.hfst\"           \
			.o. @\"filters/remove-orthography-tags.hfst\"         \
			.o. @\"filters/remove-Orth_IPA-strings.hfst\"         \
			.o. @\"$<\" \
			.o. @\"filters/remove-hyphenation-marks.hfst\"        \
			.o. @\"filters/remove-infl_deriv-borders.hfst\"       \
			.o. @\"filters/remove-word-boundary.hfst\"            \
			;" \
		| $(HFST_REGEXP2FST) $(HFST_FLAGS) -S --harmonize-flags \
		> $@

generator-gt-desc.tmp.xfst: analyser-raw-gt-desc.xfst            \
					filters/make-optional-transitivity-tags.xfst \
					filters/make-optional-homonymy-tags.xfst     \
					filters/make-optional-variant-tags.xfst      \
					filters/remove-derivation-position-tags.xfst \
					filters/remove-dialect-tags.xfst             \
					filters/remove-hyphenation-marks.xfst        \
					filters/remove-infl_deriv-borders.xfst       \
					filters/remove-word-boundary.xfst            \
					filters/remove-norm-comp-tags.xfst           \
					filters/remove-number-string-tags.xfst       \
					filters/remove-orthography-tags.xfst         \
					filters/remove-Orth_IPA-strings.xfst         \
					filters/remove-orig_lang-tags.xfst           \
					filters/remove-usage-tags.xfst
	$(AM_V_GEN)$(PRINTF) "read regex \
				@\"filters/make-optional-transitivity-tags.xfst\" \
			.o. @\"filters/make-optional-homonymy-tags.xfst\"     \
			.o. @\"filters/make-optional-variant-tags.xfst\"      \
			.o. @\"filters/remove-derivation-position-tags.xfst\" \
			.o. @\"filters/remove-dialect-tags.xfst\"             \
			.o. @\"filters/remove-norm-comp-tags.xfst\"           \
			.o. @\"filters/remove-number-string-tags.xfst\"       \
			.o. @\"filters/remove-usage-tags.xfst\"               \
			.o. @\"filters/remove-orig_lang-tags.xfst\"           \
			.o. @\"filters/remove-orthography-tags.xfst\"         \
			.o. @\"filters/remove-Orth_IPA-strings.xfst\"         \
			.o. @\"$<\" \
			.o. @\"filters/remove-hyphenation-marks.xfst\"        \
			.o. @\"filters/remove-infl_deriv-borders.xfst\"       \
			.o. @\"filters/remove-word-boundary.xfst\"            \
			;\n\
		 invert net\n\
		 save stack $@\n\
		 quit\n" | $(XFST) -q

# This is the normative analyser:
# Remove sub-standard forms to get a normative transducer
analyser-gt-norm.tmp.hfst: generator-raw-gt-desc.hfst            \
					filters/remove-derivation-position-tags.hfst \
					filters/remove-dialect-tags.hfst             \
					filters/remove-homonymy-tags.hfst            \
					filters/remove-variant-tags.hfst             \
					filters/remove-norm-comp-tags.hfst           \
					filters/remove-number-string-tags.hfst       \
					filters/remove-usage-tags.hfst               \
					filters/remove-sub-forms.hfst                \
					filters/remove-hyphenation-marks.hfst        \
					filters/remove-infl_deriv-borders.hfst       \
					filters/remove-word-boundary.hfst            \
					filters/remove-orthography-tags.hfst         \
					filters/remove-Orth_IPA-strings.hfst         \
					filters/remove-orig_lang-tags.hfst           \
					orthography/inituppercase.hfst
	$(AM_V_GEN)$(PRINTF) "\
				@\"filters/remove-derivation-position-tags.hfst\" \
			.o. @\"filters/remove-dialect-tags.hfst\"             \
			.o. @\"filters/remove-homonymy-tags.hfst\"            \
			.o. @\"filters/remove-variant-tags.hfst\"             \
			.o. @\"filters/remove-norm-comp-tags.hfst\"           \
			.o. @\"filters/remove-number-string-tags.hfst\"       \
			.o. @\"filters/remove-usage-tags.hfst\"               \
			.o. @\"filters/remove-sub-forms.hfst\"                \
			.o. @\"filters/remove-orig_lang-tags.hfst\"           \
			.o. @\"filters/remove-orthography-tags.hfst\"         \
			.o. @\"filters/remove-Orth_IPA-strings.hfst\"         \
			.o. @\"$<\" \
			.o. @\"filters/remove-hyphenation-marks.hfst\"        \
			.o. @\"filters/remove-infl_deriv-borders.hfst\"       \
			.o. @\"filters/remove-word-boundary.hfst\"            \
			.o. @\"orthography/inituppercase.hfst\"               \
			;" \
		| $(HFST_REGEXP2FST) $(HFST_FLAGS) -S --harmonize-flags \
		> $@

analyser-gt-norm.tmp.xfst: analyser-raw-gt-desc.xfst             \
					filters/remove-derivation-position-tags.xfst \
					filters/remove-dialect-tags.xfst             \
					filters/remove-homonymy-tags.xfst            \
					filters/remove-variant-tags.xfst             \
					filters/remove-norm-comp-tags.xfst           \
					filters/remove-number-string-tags.xfst       \
					filters/remove-usage-tags.xfst               \
					filters/remove-sub-forms.xfst                \
					filters/remove-hyphenation-marks.xfst        \
					filters/remove-infl_deriv-borders.xfst       \
					filters/remove-word-boundary.xfst            \
					filters/remove-orthography-tags.xfst         \
					filters/remove-Orth_IPA-strings.xfst         \
					filters/remove-orig_lang-tags.xfst           \
					orthography/inituppercase.xfst
	$(AM_V_GEN)$(PRINTF) "read regex \
				@\"filters/remove-derivation-position-tags.xfst\" \
			.o. @\"filters/remove-dialect-tags.xfst\"             \
			.o. @\"filters/remove-homonymy-tags.xfst\"            \
			.o. @\"filters/remove-variant-tags.xfst\"             \
			.o. @\"filters/remove-norm-comp-tags.xfst\"           \
			.o. @\"filters/remove-number-string-tags.xfst\"       \
			.o. @\"filters/remove-usage-tags.xfst\"               \
			.o. @\"filters/remove-sub-forms.xfst\"                \
			.o. @\"filters/remove-orig_lang-tags.xfst\"           \
			.o. @\"filters/remove-orthography-tags.xfst\"         \
			.o. @\"filters/remove-Orth_IPA-strings.xfst\"         \
			.o. @\"$<\" \
			.o. @\"filters/remove-hyphenation-marks.xfst\"        \
			.o. @\"filters/remove-infl_deriv-borders.xfst\"       \
			.o. @\"filters/remove-word-boundary.xfst\"            \
			.o. @\"orthography/inituppercase.xfst\"               \
			;\n\
		 save stack $@\n\
		 quit\n" | $(XFST)

# This is the normative generating transducer.
generator-gt-norm.tmp.hfst: generator-raw-gt-desc.hfst           \
					filters/make-optional-transitivity-tags.hfst \
					filters/make-optional-homonymy-tags.hfst     \
					filters/make-optional-variant-tags.hfst      \
					filters/remove-derivation-position-tags.hfst \
					filters/remove-dialect-tags.hfst             \
					filters/remove-hyphenation-marks.hfst        \
					filters/remove-infl_deriv-borders.hfst       \
					filters/remove-word-boundary.hfst            \
					filters/remove-norm-comp-tags.hfst           \
					filters/remove-number-string-tags.hfst       \
					filters/remove-usage-tags.hfst               \
					filters/remove-orthography-tags.hfst         \
					filters/remove-Orth_IPA-strings.hfst         \
					filters/remove-orig_lang-tags.hfst           \
					filters/remove-sub-forms.hfst
	$(AM_V_GEN)$(PRINTF) "\
				@\"filters/make-optional-transitivity-tags.hfst\" \
			.o. @\"filters/make-optional-homonymy-tags.hfst\"     \
			.o. @\"filters/make-optional-variant-tags.hfst\"      \
			.o. @\"filters/remove-derivation-position-tags.hfst\" \
			.o. @\"filters/remove-dialect-tags.hfst\"             \
			.o. @\"filters/remove-norm-comp-tags.hfst\"           \
			.o. @\"filters/remove-number-string-tags.hfst\"       \
			.o. @\"filters/remove-usage-tags.hfst\"               \
			.o. @\"filters/remove-sub-forms.hfst\"                \
			.o. @\"filters/remove-orig_lang-tags.hfst\"           \
			.o. @\"filters/remove-orthography-tags.hfst\"         \
			.o. @\"filters/remove-Orth_IPA-strings.hfst\"         \
			.o. @\"$<\" \
			.o. @\"filters/remove-hyphenation-marks.hfst\"        \
			.o. @\"filters/remove-infl_deriv-borders.hfst\"       \
			.o. @\"filters/remove-word-boundary.hfst\"            \
			;" \
		| $(HFST_REGEXP2FST) $(HFST_FLAGS) -S --harmonize-flags \
		> $@

generator-gt-norm.tmp.xfst: analyser-raw-gt-desc.xfst            \
					filters/make-optional-transitivity-tags.xfst \
					filters/make-optional-homonymy-tags.xfst     \
					filters/make-optional-variant-tags.xfst      \
					filters/remove-derivation-position-tags.xfst \
					filters/remove-dialect-tags.xfst             \
					filters/remove-hyphenation-marks.xfst        \
					filters/remove-infl_deriv-borders.xfst       \
					filters/remove-word-boundary.xfst            \
					filters/remove-norm-comp-tags.xfst           \
					filters/remove-number-string-tags.xfst       \
					filters/remove-usage-tags.xfst               \
					filters/remove-orthography-tags.xfst         \
					filters/remove-Orth_IPA-strings.xfst         \
					filters/remove-orig_lang-tags.xfst           \
					filters/remove-sub-forms.xfst
	$(AM_V_GEN)$(PRINTF) "read regex \
				@\"filters/make-optional-transitivity-tags.xfst\" \
			.o. @\"filters/make-optional-homonymy-tags.xfst\"     \
			.o. @\"filters/make-optional-variant-tags.xfst\"      \
			.o. @\"filters/remove-derivation-position-tags.xfst\" \
			.o. @\"filters/remove-dialect-tags.xfst\"             \
			.o. @\"filters/remove-norm-comp-tags.xfst\"           \
			.o. @\"filters/remove-number-string-tags.xfst\"       \
			.o. @\"filters/remove-usage-tags.xfst\"               \
			.o. @\"filters/remove-sub-forms.xfst\"                \
			.o. @\"filters/remove-orig_lang-tags.xfst\"           \
			.o. @\"filters/remove-orthography-tags.xfst\"         \
			.o. @\"filters/remove-Orth_IPA-strings.xfst\"         \
			.o. @\"$<\" \
			.o. @\"filters/remove-hyphenation-marks.xfst\"        \
			.o. @\"filters/remove-infl_deriv-borders.xfst\"       \
			.o. @\"filters/remove-word-boundary.xfst\"            \
			;\n\
		 invert net\n\
		 save stack $@\n\
		 quit\n" | $(XFST)

# The number-clock-date2text & inverse conversion transducers:
transcriptor-%2text-desc.hfst: \
					transcriptions/transcriptor-%2text-raw.hfst \
					filters/remove-NA-strings.hfst \
					filters/remove-NG-strings.hfst \
					filters/remove-usage-tags.hfst
	$(AM_V_GEN)$(PRINTF) "\
			    @\"filters/remove-usage-tags.hfst\" \
			.o. @\"filters/remove-NA-strings.hfst\" \
			.o. @\"filters/remove-NG-strings.hfst\" \
			.o. @\"$<\" \
			.o. @\"filters/remove-usage-tags.hfst\".i \
			;" \
		| $(HFST_REGEXP2FST) $(HFST_FLAGS) -S --harmonize-flags \
		> $@

transcriptor-text2%-desc.hfst: \
					transcriptions/transcriptor-%2text-raw.hfst \
					filters/remove-usage-tags.hfst \
					orthography/spellrelax.hfst
	$(AM_V_GEN)$(PRINTF) "\
			    @\"filters/remove-usage-tags.hfst\" \
			.o. @\"$<\" \
			.o. @\"filters/remove-usage-tags.hfst\".i \
			.o. @\"orthography/spellrelax.hfst\" \
			;" \
		| $(HFST_REGEXP2FST) $(HFST_FLAGS) -S --harmonize-flags \
		> $@

transcriptor-%2text-desc.xfst: \
					transcriptions/transcriptor-%2text-raw.xfst \
					filters/remove-NA-strings.xfst \
					filters/remove-NG-strings.xfst \
					filters/remove-usage-tags.xfst
	$(AM_V_GEN)$(PRINTF) "read regex \
			    @\"filters/remove-usage-tags.xfst\" \
			.o. @\"filters/remove-NA-strings.xfst\" \
			.o. @\"filters/remove-NG-strings.xfst\" \
			.o. @\"$<\" \
			.o. @\"filters/remove-usage-tags.xfst\".i \
			;\n\
		 save stack $@\n\
		 quit\n" | $(XFST) -q

transcriptor-text2%-desc.xfst: \
					transcriptions/transcriptor-%2text-raw.xfst \
					filters/remove-usage-tags.xfst \
					orthography/spellrelax.xfst
	$(AM_V_GEN)$(PRINTF) "read regex \
			    @\"filters/remove-usage-tags.xfst\" \
			.o. @\"$<\" \
			.o. @\"filters/remove-usage-tags.xfst\".i \
			.o. @\"orthography/spellrelax.xfst\" \
			;\n\
		 invert net\n\
		 save stack $@\n\
		 quit\n" | $(XFST) -q

# Create generic tagset variants of *analyzers*
# Standard descriptive
analyser-%-desc.hfst: analyser-gt-desc.hfst tagsets/%.relabel
	$(AM_V_GEN)$(HFST_FST2FST) $(HFSTFLAGS) -t $< \
		| $(HFST_SUBSTITUTE) $(HFSTFLAGS) -F $(srcdir)/tagsets/$*.relabel \
		| $(HFST_FST2FST) $(HFSTFLAGS) -w \
		-o $@

# Standard normative
analyser-%-norm.hfst: analyser-gt-norm.hfst tagsets/%.relabel
	$(AM_V_GEN)$(HFST_FST2FST) $(HFSTFLAGS) -t $< \
		| $(HFST_SUBSTITUTE) $(HFSTFLAGS) -F $(srcdir)/tagsets/$*.relabel \
		| $(HFST_FST2FST) $(HFSTFLAGS) -w \
		-o $@

# Create tagset variants of *generators*
# Standard descriptive
generator-%-desc.hfst: generator-gt-desc.hfst tagsets/%.relabel
	$(AM_V_GEN)$(HFST_FST2FST) $(HFSTFLAGS) -t $< \
		| $(HFST_SUBSTITUTE) $(HFSTFLAGS) -F $(srcdir)/tagsets/$*.relabel \
		| $(HFST_FST2FST) $(HFSTFLAGS) -w \
		-o $@

# Standard normative
generator-%-norm.hfst: generator-gt-norm.hfst tagsets/%.relabel
	$(AM_V_GEN)$(HFST_FST2FST) $(HFSTFLAGS) -t $< \
		| $(HFST_SUBSTITUTE) $(HFSTFLAGS) -F $(srcdir)/tagsets/$*.relabel \
		| $(HFST_FST2FST) $(HFSTFLAGS) -w \
		-o $@

# lemmatization is a special case of tagset variant
lemmatize.default.hfst: analyser-gt-desc.hfst tagsets/lemmatize.relabel
	$(AM_V_GEN)$(HFST_SUBSTITUTE) $(HFSTFLAGS) \
		-F $(srcdir)/tagsets/lemmatize.relabel -i $< -o $@

# morpher is a morph segmenting variant: taloautoissani -> talo#auto>i>ssa>ni
morpher-gt-desc.hfst: generator-raw-gt-desc.hfst \
					 orthography/inituppercase.hfst \
					 orthography/spellrelax.hfst \
					filters/remove-hyphenation-marks.hfst        \
					filters/remove-infl_deriv-borders.hfst       \
					filters/remove-word-boundary.hfst
	$(AM_V_GEN)$(PRINTF) "\
			 [ [@\"$<\" \
			.o. @\"orthography/inituppercase.hfst\"         \
			.o. @\"orthography/spellrelax.hfst\"  ].l       \
			.o. @\"filters/remove-hyphenation-marks.hfst\"  \
			.o. @\"filters/remove-infl_deriv-borders.hfst\" \
			.o. @\"filters/remove-word-boundary.hfst\"  ].i \
			;" \
		| $(HFST_REGEXP2FST) $(HFST_FLAGS) -S --harmonize-flags \
		> $@

####### Other targets: ###########
# cleaning
clean-local:
	-rm -f *.hfst *.xfst

# The analyser differs from the
# regular analyser by NOT removing variant and homonym tags, so that we can
# generate proper (mini)paradigms for the given lemmas and variants (the
# analysis string is used as input to the generator).
generator-mt-gt-norm.tmp.hfst: generator-raw-gt-desc.hfst \
					filters/remove-derivation-position-tags.hfst \
					filters/remove-homonymy-tags.hfst            \
					filters/remove-variant-tags.hfst             \
					filters/remove-norm-comp-tags.hfst           \
					filters/remove-number-string-tags.hfst       \
					filters/remove-NG-strings.hfst               \
					filters/remove-usage-tags.hfst               \
					filters/remove-sub-forms.hfst                \
					filters/remove-orthography-tags.hfst         \
					filters/remove-Orth_IPA-strings.hfst         \
					filters/remove-hyphenation-marks.hfst        \
					filters/remove-infl_deriv-borders.hfst       \
					filters/remove-word-boundary.hfst
	$(AM_V_GEN)$(PRINTF) "\
			@\"filters/remove-derivation-position-tags.hfst\" \
    	.o. @\"filters/remove-homonymy-tags.hfst\"            \
    	.o. @\"filters/remove-variant-tags.hfst\"             \
    	.o. @\"filters/remove-norm-comp-tags.hfst\"           \
    	.o. @\"filters/remove-number-string-tags.hfst\"       \
    	.o. @\"filters/remove-usage-tags.hfst\"               \
    	.o. @\"filters/remove-sub-forms.hfst\"                \
    	.o. @\"filters/remove-NG-strings.hfst\"               \
    	.o. @\"filters/remove-orthography-tags.hfst\"         \
    	.o. @\"filters/remove-Orth_IPA-strings.hfst\"         \
    	.o. @\"$<\" \
    	.o. @\"filters/remove-word-boundary.hfst\"            \
    	.o. @\"filters/remove-hyphenation-marks.hfst\"        \
    	.o. @\"filters/remove-infl_deriv-borders.hfst\"       \
    	;" \
		| $(HFST_REGEXP2FST) $(HFST_FLAGS) -S --harmonize-flags \
		> $@

analyser-mt-gt-desc.tmp.hfst: generator-raw-gt-desc.hfst \
					filters/remove-derivation-position-tags.hfst \
					filters/remove-homonymy-tags.hfst \
					filters/remove-variant-tags.hfst \
					filters/remove-norm-comp-tags.hfst \
					filters/remove-number-string-tags.hfst \
					filters/remove-usage-tags.hfst \
					filters/remove-hyphenation-marks.hfst        \
					filters/remove-infl_deriv-borders.hfst       \
					filters/remove-orthography-tags.hfst         \
					filters/remove-Orth_IPA-strings.hfst         \
					filters/remove-word-boundary.hfst
	$(AM_V_GEN)$(PRINTF) "\
			@\"filters/remove-derivation-position-tags.hfst\" \
    	.o. @\"filters/remove-homonymy-tags.hfst\"            \
    	.o. @\"filters/remove-variant-tags.hfst\"             \
    	.o. @\"filters/remove-norm-comp-tags.hfst\"           \
    	.o. @\"filters/remove-number-string-tags.hfst\"       \
    	.o. @\"filters/remove-usage-tags.hfst\"               \
    	.o. @\"filters/remove-orthography-tags.hfst\"         \
    	.o. @\"filters/remove-Orth_IPA-strings.hfst\"         \
    	.o. @\"$<\" \
    	.o. @\"filters/remove-word-boundary.hfst\"            \
    	.o. @\"filters/remove-hyphenation-marks.hfst\"        \
    	.o. @\"filters/remove-infl_deriv-borders.hfst\"       \
    	;" \
		| $(HFST_REGEXP2FST) $(HFST_FLAGS) -S --harmonize-flags \
		> $@

generator-mt-apertium-norm.hfst: \
			generator-mt-gt-norm.hfst \
			$(srcdir)/tagsets/apertium.relabel
	$(AM_V_GEN)$(HFST_SUBSTITUTE) $(HFSTFLAGS) -i $< \
		-F $(srcdir)/tagsets/apertium.relabel \
		-o $@

analyser-mt-apertium-desc.%.hfst: \
			analyser-mt-gt-desc.%.hfst \
			$(srcdir)/tagsets/apertium.relabel
	$(AM_V_GEN)$(HFST_SUBSTITUTE) $(HFSTFLAGS) -i $< \
		-F $(srcdir)/tagsets/apertium.relabel \
		| $(HFST_FST2FST) $(HFSTFLAGS) -t \
		-o $@

%.att: %.hfst
	$(AM_V_GEN)$(HFST_FST2FST) $(HFSTFLAGS) -w -i $< \
		| $(HFST_FST2TXT) -o $@

%.att.gz: %.att
	$(AM_V_GEN)$(GZIP) -9 -c $< > $@

# oahpa-norm / generator-oahpa-gt-norm
# Require:
# * homonym tags: Hom1, Hom2 (ie don't remove)  - done
# Optionally allow these tags:
# * transitivity tags: IV, TV,                  - done
# * variant tags: v1, v2, v3, v4, v5,           - done
# * generation restriction tags: Use/NGminip    - not implemented
#
# Build the normative Oahpa generator:
generator-oahpa-gt-norm.tmp.xfst: analyser-raw-gt-desc.xfst      \
					filters/make-optional-transitivity-tags.xfst \
					filters/make-optional-variant-tags.xfst      \
					filters/remove-derivation-position-tags.xfst \
					filters/remove-dialect-tags.xfst             \
					filters/remove-hyphenation-marks.xfst        \
					filters/remove-infl_deriv-borders.xfst       \
					filters/remove-word-boundary.xfst            \
					filters/remove-norm-comp-tags.xfst           \
					filters/remove-number-string-tags.xfst       \
					filters/remove-usage-tags.xfst               \
					filters/remove-orthography-tags.xfst         \
					filters/remove-Orth_IPA-strings.xfst         \
					filters/remove-sub-forms.xfst
	$(AM_V_GEN)$(PRINTF) "read regex                              \
				@\"filters/make-optional-transitivity-tags.xfst\" \
			.o. @\"filters/make-optional-variant-tags.xfst\"      \
			.o. @\"filters/remove-derivation-position-tags.xfst\" \
			.o. @\"filters/remove-dialect-tags.xfst\"             \
			.o. @\"filters/remove-norm-comp-tags.xfst\"           \
			.o. @\"filters/remove-number-string-tags.xfst\"       \
			.o. @\"filters/remove-usage-tags.xfst\"               \
			.o. @\"filters/remove-sub-forms.xfst\"                \
			.o. @\"filters/remove-orthography-tags.xfst\"         \
			.o. @\"filters/remove-Orth_IPA-strings.xfst\"         \
			.o. @\"$<\"                                           \
			.o. @\"filters/remove-hyphenation-marks.xfst\"        \
			.o. @\"filters/remove-infl_deriv-borders.xfst\"       \
			.o. @\"filters/remove-word-boundary.xfst\"            \
			;\n\
		 invert net\n\
		 save stack $@\n\
		 quit\n" | $(XFST)

# Dummy hfst rule to avoid build errors:
generator-oahpa-gt-norm.tmp.hfst: generator-raw-gt-desc.hfst
	$(AM_V_GEN)cp -f $< $@

# First attempt at building dictionary fsts. The analyser differs from the
# regular analyser by NOT removing variant and homonym tags, so that we can
# generate proper (mini)paradigms for the given lemmas and variants (the
# analysis string is used as input to the generator).
analyser-dict-gt-desc.tmp.xfst: analyser-raw-gt-desc.xfst        \
					filters/remove-derivation-position-tags.xfst \
					filters/remove-dialect-tags.xfst             \
					filters/remove-norm-comp-tags.xfst           \
					filters/remove-orig_lang-tags.xfst           \
					filters/remove-usage-tags.xfst               \
					filters/remove-semantic-tags-except-prop.xfst \
					filters/remove-hyphenation-marks.xfst        \
					filters/remove-infl_deriv-borders.xfst       \
					filters/remove-word-boundary.xfst            \
					filters/remove-orthography-tags.xfst         \
					filters/remove-Orth_IPA-strings.xfst         \
					orthography/inituppercase.xfst
	$(AM_V_GEN)$(PRINTF) "read regex \
				@\"filters/remove-derivation-position-tags.xfst\" \
			.o. @\"filters/remove-dialect-tags.xfst\"             \
			.o. @\"filters/remove-norm-comp-tags.xfst\"           \
			.o. @\"filters/remove-orig_lang-tags.xfst\"           \
			.o. @\"filters/remove-usage-tags.xfst\"               \
			.o. @\"filters/remove-semantic-tags-except-prop.xfst\"  \
			.o. @\"filters/remove-orthography-tags.xfst\"         \
			.o. @\"filters/remove-Orth_IPA-strings.xfst\"         \
			.o. @\"$<\" \
			.o. @\"filters/remove-hyphenation-marks.xfst\"        \
			.o. @\"filters/remove-infl_deriv-borders.xfst\"       \
			.o. @\"filters/remove-word-boundary.xfst\"            \
			.o. @\"orthography/inituppercase.xfst\"               \
			;\n\
		 save stack $@\n\
		 quit\n" | $(XFST) -q

# First attempt at building dictionary fsts. The analyser differs from the
# regular analyser by NOT removing variant and homonym tags, so that we can
# generate proper (mini)paradigms for the given lemmas and variants (the
# analysis string is used as input to the generator).
analyser-dict-gt-desc-mobile.tmp.xfst: analyser-raw-gt-desc.xfst        \
					filters/remove-derivation-position-tags.xfst \
					filters/remove-dialect-tags.xfst             \
					filters/remove-norm-comp-tags.xfst           \
					filters/remove-orig_lang-tags.xfst           \
					filters/remove-usage-tags.xfst               \
					filters/remove-semantic-tags-except-prop.xfst \
					filters/remove-hyphenation-marks.xfst        \
					filters/remove-infl_deriv-borders.xfst       \
					filters/remove-word-boundary.xfst            \
					filters/remove-orthography-tags.xfst         \
					filters/remove-Orth_IPA-strings.xfst         \
					orthography/inituppercase.xfst               \
					orthography/spellrelax.xfst                  \
					orthography/spellrelax-mobile-keyboard.xfst
	$(AM_V_GEN)$(PRINTF) "read regex \
				@\"filters/remove-derivation-position-tags.xfst\" \
			.o. @\"filters/remove-dialect-tags.xfst\"             \
			.o. @\"filters/remove-norm-comp-tags.xfst\"           \
			.o. @\"filters/remove-orig_lang-tags.xfst\"           \
			.o. @\"filters/remove-usage-tags.xfst\"               \
			.o. @\"filters/remove-semantic-tags-except-prop.xfst\"  \
			.o. @\"filters/remove-orthography-tags.xfst\"         \
			.o. @\"filters/remove-Orth_IPA-strings.xfst\"         \
			.o. @\"$<\" \
			.o. @\"filters/remove-hyphenation-marks.xfst\"        \
			.o. @\"filters/remove-infl_deriv-borders.xfst\"       \
			.o. @\"filters/remove-word-boundary.xfst\"            \
			.o. @\"orthography/inituppercase.xfst\"               \
			.o. @\"orthography/spellrelax.xfst\"                  \
			.o. @\"orthography/spellrelax-mobile-keyboard.xfst\"  \
			;\n\
		 save stack $@\n\
		 quit\n" | $(XFST) -q

# We also want the corresponding generator, so that we can easily add yaml tests
# to the lexc files (yaml tests always go in symmetric analyser-generator pairs)
generator-dict-gt-desc.tmp.xfst: analyser-raw-gt-desc.xfst       \
					filters/remove-derivation-position-tags.xfst \
					filters/remove-dialect-tags.xfst             \
					filters/remove-norm-comp-tags.xfst           \
					filters/remove-orig_lang-tags.xfst           \
					filters/remove-usage-tags.xfst               \
					filters/remove-hyphenation-marks.xfst        \
					filters/remove-infl_deriv-borders.xfst       \
					filters/remove-word-boundary.xfst            \
					filters/remove-orthography-tags.xfst         \
					filters/remove-Orth_IPA-strings.xfst         \
					orthography/inituppercase.xfst               \
					orthography/spellrelax.xfst                  \
					orthography/spellrelax-mobile-keyboard.xfst
	$(AM_V_GEN)$(PRINTF) "read regex \
				@\"filters/remove-derivation-position-tags.xfst\" \
			.o. @\"filters/remove-dialect-tags.xfst\"             \
			.o. @\"filters/remove-norm-comp-tags.xfst\"           \
			.o. @\"filters/remove-usage-tags.xfst\"               \
			.o. @\"filters/remove-orig_lang-tags.xfst\"           \
			.o. @\"filters/remove-orthography-tags.xfst\"         \
			.o. @\"filters/remove-Orth_IPA-strings.xfst\"         \
			.o. @\"$<\" \
			.o. @\"filters/remove-hyphenation-marks.xfst\"        \
			.o. @\"filters/remove-infl_deriv-borders.xfst\"       \
			.o. @\"filters/remove-word-boundary.xfst\"            \
			.o. @\"orthography/inituppercase.xfst\"               \
			.o. @\"orthography/spellrelax.xfst\"                  \
			.o. @\"orthography/spellrelax-mobile-keyboard.xfst\"  \
			;\n\
		 invert net\n\
		 save stack $@\n\
		 quit\n" | $(XFST) -q

# The generator does NOT include NG and NGminip tagged strings, since we do
# not want them in the miniparadigms generated by this transducer. At the same
# time, this transducer DOES CONTAIN the homonym and variant tags, to govern
# proper paradigm generation:
generator-dict-gt-norm.tmp.xfst: analyser-raw-gt-desc.xfst \
					filters/make-optional-transitivity-tags.xfst \
					filters/remove-derivation-position-tags.xfst \
					filters/remove-dialect-tags.xfst \
					filters/remove-hyphenation-marks.xfst        \
					filters/remove-infl_deriv-borders.xfst       \
					filters/remove-word-boundary.xfst            \
					filters/remove-norm-comp-tags.xfst \
					filters/remove-orig_lang-tags.xfst           \
					filters/remove-usage-tags.xfst \
					filters/remove-NGminip-strings.xfst \
					filters/remove-orthography-tags.xfst         \
					filters/remove-Orth_IPA-strings.xfst         \
					filters/remove-sub-forms.xfst
	$(AM_V_GEN)$(PRINTF) "read regex \
				@\"filters/make-optional-transitivity-tags.xfst\" \
			.o. @\"filters/remove-derivation-position-tags.xfst\" \
			.o. @\"filters/remove-dialect-tags.xfst\" \
			.o. @\"filters/remove-norm-comp-tags.xfst\" \
			.o. @\"filters/remove-orig_lang-tags.xfst\"           \
			.o. @\"filters/remove-usage-tags.xfst\" \
			.o. @\"filters/remove-NGminip-strings.xfst\" \
			.o. @\"filters/remove-sub-forms.xfst\" \
			.o. @\"filters/remove-orthography-tags.xfst\"         \
			.o. @\"filters/remove-Orth_IPA-strings.xfst\"         \
			.o. @\"$<\" \
			.o. @\"filters/remove-hyphenation-marks.xfst\"        \
			.o. @\"filters/remove-infl_deriv-borders.xfst\"       \
			.o. @\"filters/remove-word-boundary.xfst\"            \
			;\n\
		 invert net\n\
		 save stack $@\n\
		 quit\n" | $(XFST)

# Even in this case we want the "other" transducer, to be able to test them.
analyser-dict-gt-norm.tmp.xfst: analyser-raw-gt-desc.xfst \
					filters/make-optional-transitivity-tags.xfst \
					filters/remove-derivation-position-tags.xfst \
					filters/remove-dialect-tags.xfst \
					filters/remove-hyphenation-marks.xfst        \
					filters/remove-infl_deriv-borders.xfst       \
					filters/remove-word-boundary.xfst            \
					filters/remove-norm-comp-tags.xfst \
					filters/remove-usage-tags.xfst \
					filters/remove-NGminip-strings.xfst \
					filters/remove-orthography-tags.xfst         \
					filters/remove-Orth_IPA-strings.xfst         \
					filters/remove-sub-forms.xfst
	$(AM_V_GEN)$(PRINTF) "read regex \
				@\"filters/make-optional-transitivity-tags.xfst\" \
			.o. @\"filters/remove-derivation-position-tags.xfst\" \
			.o. @\"filters/remove-dialect-tags.xfst\" \
			.o. @\"filters/remove-norm-comp-tags.xfst\" \
			.o. @\"filters/remove-usage-tags.xfst\" \
			.o. @\"filters/remove-NGminip-strings.xfst\" \
			.o. @\"filters/remove-sub-forms.xfst\" \
			.o. @\"filters/remove-orthography-tags.xfst\"         \
			.o. @\"filters/remove-Orth_IPA-strings.xfst\"         \
			.o. @\"$<\" \
			.o. @\"filters/remove-hyphenation-marks.xfst\"        \
			.o. @\"filters/remove-infl_deriv-borders.xfst\"       \
			.o. @\"filters/remove-word-boundary.xfst\"            \
			;\n\
		 save stack $@\n\
		 quit\n" | $(XFST)

# First attempt at building disambiguation fsts. The analyser differs from the
# regular analyser by NEITHER removing variant and homonym tags, NOR removing
# semantic tags or Use/Sub. The variant and homonym tags are there to help choosing
# forms, as are Use/Sub and Sem-tags.
analyser-disamb-gt-desc.tmp.hfst: generator-raw-gt-desc.hfst     \
					filters/remove-derivation-position-tags.hfst \
					filters/remove-dialect-tags.hfst             \
					filters/remove-norm-comp-tags.hfst           \
					filters/remove-orig_lang-tags.hfst           \
					filters/remove-usage-tags.hfst               \
					filters/remove-hyphenation-marks.hfst        \
					filters/remove-infl_deriv-borders.hfst       \
					filters/remove-word-boundary.hfst            \
					filters/remove-orthography-tags.hfst         \
					filters/remove-Orth_IPA-strings.hfst         \
					orthography/inituppercase.hfst
	$(AM_V_GEN)$(PRINTF) \
			   "@\"filters/remove-derivation-position-tags.hfst\" \
			.o. @\"filters/remove-dialect-tags.hfst\"             \
			.o. @\"filters/remove-norm-comp-tags.hfst\"           \
			.o. @\"filters/remove-orig_lang-tags.hfst\"           \
			.o. @\"filters/remove-usage-tags.hfst\"               \
			.o. @\"filters/remove-orthography-tags.hfst\"         \
			.o. @\"filters/remove-Orth_IPA-strings.hfst\"         \
			.o. @\"$<\" \
			.o. @\"filters/remove-hyphenation-marks.hfst\"        \
			.o. @\"filters/remove-infl_deriv-borders.hfst\"       \
			.o. @\"filters/remove-word-boundary.hfst\"            \
			.o. @\"orthography/inituppercase.hfst\"               \
			;" \
		| $(HFST_REGEXP2FST) $(HFST_FLAGS) -S --harmonize-flags \
		> $@

# Even in this case we want the "other" transducer, to be able to test them.
analyser-disamb-gt-norm.tmp.hfst: generator-raw-gt-desc.hfst     \
					filters/make-optional-transitivity-tags.hfst \
					filters/remove-derivation-position-tags.hfst \
					filters/remove-dialect-tags.hfst \
					filters/remove-hyphenation-marks.hfst        \
					filters/remove-infl_deriv-borders.hfst       \
					filters/remove-word-boundary.hfst            \
					filters/remove-norm-comp-tags.hfst \
					filters/remove-usage-tags.hfst \
					filters/remove-NGminip-strings.hfst \
					filters/remove-orthography-tags.hfst         \
					filters/remove-Orth_IPA-strings.hfst         \
					filters/remove-sub-forms.hfst
	$(AM_V_GEN)$(PRINTF) \
			   "@\"filters/make-optional-transitivity-tags.hfst\" \
			.o. @\"filters/remove-derivation-position-tags.hfst\" \
			.o. @\"filters/remove-dialect-tags.hfst\" \
			.o. @\"filters/remove-norm-comp-tags.hfst\" \
			.o. @\"filters/remove-usage-tags.hfst\" \
			.o. @\"filters/remove-NGminip-strings.hfst\" \
			.o. @\"filters/remove-sub-forms.hfst\" \
			.o. @\"filters/remove-orthography-tags.hfst\"         \
			.o. @\"filters/remove-Orth_IPA-strings.hfst\"         \
			.o. @\"$<\" \
			.o. @\"filters/remove-hyphenation-marks.hfst\"        \
			.o. @\"filters/remove-infl_deriv-borders.hfst\"       \
			.o. @\"filters/remove-word-boundary.hfst\"            \
			;" \
		| $(HFST_REGEXP2FST) $(HFST_FLAGS) -S --harmonize-flags \
		> $@

# First attempt at building disambiguation fsts. The analyser differs from the
# regular analyser by NEITHER removing variant and homonym tags, NOR removing
# semantic tags or Use/Sub. The variant and homonym tags are there to help choosing
# forms, as are Use/Sub and Sem-tags.
analyser-disamb-gt-desc.tmp.xfst: analyser-raw-gt-desc.xfst        \
					filters/remove-derivation-position-tags.xfst \
					filters/remove-dialect-tags.xfst             \
					filters/remove-norm-comp-tags.xfst           \
					filters/remove-orig_lang-tags.xfst           \
					filters/remove-usage-tags.xfst               \
					filters/remove-hyphenation-marks.xfst        \
					filters/remove-infl_deriv-borders.xfst       \
					filters/remove-word-boundary.xfst            \
					filters/remove-orthography-tags.xfst         \
					filters/remove-Orth_IPA-strings.xfst         \
					orthography/inituppercase.xfst
	$(AM_V_GEN)$(PRINTF) "read regex \
				@\"filters/remove-derivation-position-tags.xfst\" \
			.o. @\"filters/remove-dialect-tags.xfst\"             \
			.o. @\"filters/remove-norm-comp-tags.xfst\"           \
			.o. @\"filters/remove-orig_lang-tags.xfst\"           \
			.o. @\"filters/remove-usage-tags.xfst\"               \
			.o. @\"filters/remove-orthography-tags.xfst\"         \
			.o. @\"filters/remove-Orth_IPA-strings.xfst\"         \
			.o. @\"$<\" \
			.o. @\"filters/remove-hyphenation-marks.xfst\"        \
			.o. @\"filters/remove-infl_deriv-borders.xfst\"       \
			.o. @\"filters/remove-word-boundary.xfst\"            \
			.o. @\"orthography/inituppercase.xfst\"               \
			;\n\
		 save stack $@\n\
		 quit\n" | $(XFST) -q

# Even in this case we want the "other" transducer, to be able to test them.
analyser-disamb-gt-norm.tmp.xfst: analyser-raw-gt-desc.xfst \
					filters/make-optional-transitivity-tags.xfst \
					filters/remove-derivation-position-tags.xfst \
					filters/remove-dialect-tags.xfst \
					filters/remove-hyphenation-marks.xfst        \
					filters/remove-infl_deriv-borders.xfst       \
					filters/remove-word-boundary.xfst            \
					filters/remove-norm-comp-tags.xfst \
					filters/remove-usage-tags.xfst \
					filters/remove-NGminip-strings.xfst \
					filters/remove-orthography-tags.xfst         \
					filters/remove-Orth_IPA-strings.xfst         \
					filters/remove-sub-forms.xfst
	$(AM_V_GEN)$(PRINTF) "read regex \
				@\"filters/make-optional-transitivity-tags.xfst\" \
			.o. @\"filters/remove-derivation-position-tags.xfst\" \
			.o. @\"filters/remove-dialect-tags.xfst\" \
			.o. @\"filters/remove-norm-comp-tags.xfst\" \
			.o. @\"filters/remove-usage-tags.xfst\" \
			.o. @\"filters/remove-NGminip-strings.xfst\" \
			.o. @\"filters/remove-sub-forms.xfst\" \
			.o. @\"filters/remove-orthography-tags.xfst\"         \
			.o. @\"filters/remove-Orth_IPA-strings.xfst\"         \
			.o. @\"$<\" \
			.o. @\"filters/remove-hyphenation-marks.xfst\"        \
			.o. @\"filters/remove-infl_deriv-borders.xfst\"       \
			.o. @\"filters/remove-word-boundary.xfst\"            \
			;\n\
		 save stack $@\n\
		 quit\n" | $(XFST) -q

# vim: set ft=automake:

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
